<?php

/**
 * Implements hook_hosting_feature()
 */
function devshop_queue_hosting_feature() {
  // From hosting_example_hosting_feature().
  $features['devshop_queue'] = array(
    'title' => t('DevShop Queue'),
    'description' => t('Provides a queue for pulling a Git powered platform.'),
    'status' => HOSTING_FEATURE_DISABLED,
  );
  return $features;
}

/**
 * Implements hook_hosting_queues()
 */
function devshop_queue_hosting_queues() {
  $items['pull'] = array(
    'type' => 'batch', 
    'name' => t('Pull queue'), 
    'description' => t('Run git pull on platforms configured to do so.'), 
    'total_items' => hosting_site_count(), 
    'frequency' => strtotime("1 minute", 0), 
    'min_threads' => 6, 
    'max_threads' => 12, 
    'threshold' => 100, 
    'singular' => t('platform'), 
    'plural' => t('platforms'),
  );
  return $items;
}

/**
 * Implements hook_form_alter().
 */
function devshop_queue_form_alter(&$form, &$form_status, $form_id){
  if ($form_id == 'platform_node_form'){
    drupal_set_message('node form');
    $form['devshop'] = array(
      '#type' => 'fieldset',
      '#title' => t('DevShop'),
    );
    $form['devshop']['pull'] = array(
      '#title' => 'Enable Pull Queue',
      '#type' => 'checkbox',
      '#description' => t('Put this platform into the regular Git Pull queue.  See !link to configure the queue.', array(
        '!link' => l(t('Hosting Queues'), 'admin/hosting/queues'))
      ),
    );
    $form['devshop']['pull_reset'] = array(
      '#title' => 'Hard Reset on Pull',
      '#type' => 'checkbox',
      '#description' => t('Reset any changes to platform files. <em>WARNING: Any uncommitted changes to the platform files will be discarded.</em>', array(
        '!link' => l(t('Hosting Queues'), 'admin/hosting/queues'))
      ),
    );
  }
}

/**
 * hook_nodeapi()
 */
function devshop_queue_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'insert':
      dsm($op);
      break;
    case 'update':
      db_query('UPDATE {devshop_queue} SET ('));
      break;
  }
}