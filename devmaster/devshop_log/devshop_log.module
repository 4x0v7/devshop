<?php
/*
 * devshop_log.module: a module in the DevShop project which displays
 * the Git commit log for each platform. This is currently a very simple
 * minded module. It assumes the operator knows what he/she is doing.
 */

/**
 * Implementation of hook_perm()
 */
function devshop_log_perm() {
  return array(
    'view git commit logs',
  );
}

/*
 * The access callback for the Git Log menu tab. Make sure
 * user has perms to veiw and and also that the node we are
 * viewing is a platform node.
 */

function _devsop_log_access_callback($nid) {

  if (!user_access('view git commit logs')) {
    return FALSE;
  }

  $node = node_load($nid);
  if (!$node || $node->type != 'project') {
    return FALSE;
  }
  return TRUE;
}

/**
 * Implementation of hook_menu()
 */
function devshop_log_menu() {

  $items['admin/hosting/gitlog'] = array(
    'title' => 'DevShop Commit Log',
    'description' => 'Configure Commit Log View',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('devshop_git_log_settings'),
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('administer hosting settings'),
  );

  $items['node/%/gitlog'] = array(
    'title' => 'Commit Log',
    'description' => 'View commit log entries',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('devshop_log_view_form', 1),
    'type' => MENU_LOCAL_TASK,
    'access callback' => _devsop_log_access_callback,
    'access arguments' => array(1),
    'weight' => 4,
  );

  return ($items);
}


/**
 * View log form
 */
function devshop_log_view_form($form, $nid) {
  $form['devsop_log'] = array(
    '#type'   => 'item',
    '#title'  => '',
    '#value'  => t(''),
    '#weight' => 0,
  );
  $form['devsop_log']['commit_log'] = array(
    '#type'          => 'textarea',
    '#title'         => t('Git Commit Log'),
    '#default_value' => t(_devshop_log_load($nid)),
    '#attributes'    => array('readonly' => 'readonly'),
    '#rows'          => 25,
  );

  return $form;
}

/**
 * General settings form.
 */
function devshop_git_log_settings() {
  $form['devsop_github'] = array(
    '#type' => 'item',
    '#title' => t('DevShop Git Commit Log View settings'),
    '#value' => '',
    '#weight' => 0,
  );
  $form['devsop_git_log']['devshop_git_log_count'] = array(
    '#type' => 'textfield',
    '#maxlength' => 5,
    '#title' => t('Max log entries to display'),
    '#default_value' => variable_get('devshop_git_log_count', 10), 
    '#weight' => 1,
    '#description' => t('Enter the maximum number of log entries to ' .
    		        'display in the Git Commit Log View page. A ' .
			'value of 0 will display all of the log entries.'),
  );

  return system_settings_form($form);
}


/*
 * This is a hack which loads the git commit log for the given
 * platform node. 
 */

function _devshop_log_load($nid) {
  
  $project_node = node_load($nid);
  $project_platforms = array_flip($project_node->project_objects['platform']);
  
  // load the platform node  
  if (!($node = node_load($project_platforms['dev']))) {
    return "Unable to load platform node!";
  }

  // Run "git log" and capture the output. We need to chdir to the repo
  // directory before we fetch the log. Technically, I should be able to
  // use git's --work-tree option and not have to chdir, but for some
  // reason, it doesn't work. It works when I run the exact same command
  // at the shell prompt, but doesn't work when I call git from PHP. 
  // Something to fix one day.

  $log_count = variable_get('devshop_git_log_count', 10);
  $log_count_opt = '';
  if($log_count > 0) {
    $log_count_opt = "-$log_count";
  }

  $git_path = variable_get('devshop_git_path', 'git');

  // Get our current working directory
  $cwd = getcwd();
  // Switch to the repo directory
  chdir($node->publish_path);
  // Fetch the log
  $output = shell_exec("$git_path log $log_count_opt 2>&1");
  // Change back to our original work directory
  chdir($cwd);

  // See if the command failed
  if ($output == NULL) {
    return "Unable to execute 'git log'. " .
    	   "Make sure the 'git' executable is in your path.";
  }

  // return the output
  return $output;
}
