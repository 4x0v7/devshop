<?php

/**
 * Implementation of hook_hosting_tasks()
 *
 * @TODO: Figure out how to hide this task from sites that don't have
 * features.module enabled.
 *
 * See http://api.aegirproject.org/api/Hostmaster/modules--hosting--task--hosting_task.api.php/function/hook_hosting_tasks/7.x-2.x
 */
function devshop_tasks_hosting_tasks() {
  $tasks = array();

  $tasks['site']['devshop-commit'] = array(
    'title' => t('Commit Features'),
    'description' => t('Recreates all Features and commits the result.'),
    'dialog' => TRUE,
  );
  $pull = false;

  if (arg(0) == 'node' && is_numeric(arg(1))) {
    $node = node_load(arg(1));
    if ($node && $node->platform) {
      $pnode = node_load($node->platform);
      $pull = $pnode->pull;
    }
  }

  $tasks['site']['devshop-pull'] = array(
    'title' => t('Pull Code'),
    'description' => t('Pull & verify site code and (optionally) run update.php, clear cache, and revert features.'),
    'dialog' => TRUE,
    'hidden' => $pull,
  );

  $tasks['site']['devshop-sync'] = array(
    'title' => t('Sync Content'),
    'description' => t('Sync content from another site and (optionally) run update.php, clear cache, and revert features.'),
    'dialog' => TRUE,
  );
  return $tasks;
}

/**
 * Implementation of hook_perm()
 */
function devshop_tasks_perm() {
  return array(
    'create devshop-commit task',
    'create devshop-pull task',
    'create devshop-sync task',
  );
}

/**
 * Implementation of hook_hosting_task_TASK_TYPE_form().
 *
 * For "Commit" task.
 */
function hosting_task_devshop_commit_form($node) {
  $form['message'] = array(
    '#title' => t('Commit Message'),
    '#type' => 'textarea',
    '#description' => 'A message describing this commit. Too see a diff output off all of the features, click ' . l(t('here.'), "http://$node->hosting_name/features/diff/all", array('absolute' => FALSE, 'attributes' => array('target' => '_blank'))) . ' Be patient. It takes a few moments for the diffs to be generatred.'
  );
  $form['push'] = array(
    '#title' => t('Push code after commit?'),
    '#type' => 'checkbox',
    '#default_value' => 1,
  );
  $form['revert'] = array(
    '#title' => t('Force revert features after commit?'),
    '#type' => 'checkbox',
    '#default_value' => 1,
  );
  // @TODO: Provide a DIFF display to give the user an idea of what has changed.
  return $form;
}
/**
 * Implementation of hook_hosting_task_TASK_TYPE_form().
 *
 * For "Pull Code" task.
 */
function hosting_task_devshop_pull_form($node) {
  // @TODO: Once there is some kind of site relationship system,
  // determine if the site has a parent site to sync from, then show this checkbox.
  /*
  $form['sync'] = array(
    '#title' => t('Sync content from live before code pull?'),
    '#type' => 'checkbox',
    '#default_value' => 1,
  );
  */
  $form['update'] = array(
    '#title' => t('Run update.php after code pull?'),
    '#type' => 'checkbox',
    '#default_value' => 1,
  );
  $form['revert'] = array(
    '#title' => t('Revert all features after code pull?'),
    '#type' => 'checkbox',
    '#default_value' => 1,
  );
  $form['cache'] = array(
    '#title' => t('Clear cache after code pull?'),
    '#type' => 'checkbox',
    '#default_value' => 1,
  );
  return $form;
}

/**
 * Implementation of hook_hosting_task_TASK_TYPE_form().
 *
 * For "Sync Content" task.
 */
function hosting_task_devshop_sync_form($node) {
/* Disabled until we add support for custom aliases
  $form['source'] = array(
    '#title' => t('Source site alias'),
    '#type' => 'textfield',
    '#description' => t('Enter a site alias to sync from.  The alias must exist in the local system.'),
  );
*/

  $sites = array();
  $r = db_query("SELECT n.title FROM {node} AS n " .
       		"LEFT JOIN {hosting_site} AS h ON n.nid = h.nid " .
		"WHERE n.type = 'site' AND h.status = 1 AND n.title <> '%s'" .
		"ORDER BY n.title ASC",
		$node->title);

  while($sa = db_fetch_object($r)) {
    $sites['@' . $sa->title] = '@' . $sa->title;
  }

  $form['source'] = array(
    '#type' => 'select',
    '#title' => t('Source site alias'),
    '#options' => $sites,
    '#description' => t('Select site alias to sync from.'),
  );

  $form['pull'] = array(
    '#title' => t('Pull code before content sync?'),
    '#type' => 'checkbox',
    '#default_value' => 1,
  );
  $form['update'] = array(
    '#title' => t('Run update.php after content sync?'),
    '#type' => 'checkbox',
    '#default_value' => 1,
  );
  $form['revert'] = array(
    '#title' => t('Revert all features after content sync?'),
    '#type' => 'checkbox',
    '#default_value' => 1,
  );
  $form['cache'] = array(
    '#title' => t('Clear cache after content sync?'),
    '#type' => 'checkbox',
    '#default_value' => 1,
  );
  return $form;
}

