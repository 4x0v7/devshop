<?php

/**
 * @file devshop_projects.module
 * a module in the DevShop module group which enables the user to create 
 * proects and group sites/platforms into project groups.
 */

/**
 * Implementation of hook_perm()
 */
function devshop_testing_perm() {
  return array(
    'create test task',
  );
}

/**
 * Implements hook_nodeapi()
 */
function devshop_testing_nodeapi(&$node, $op, $a3 = null) {

  if ($node->type != 'project' || $a3 != null) {
    return;
  }

  switch ($op) {
  case 'load':
    $data = db_fetch_array(db_query("SELECT tests_to_run " .
				     "FROM {hosting_devshop_project_testing} ".
				     "WHERE project_nid = %d", $node->nid));
    return $data;

  case 'view':

    break;


  case 'insert':
  case 'update':
    db_query("DELETE FROM {hosting_devshop_project_testing} " .
	     "WHERE project_nid = %d", $node->nid);

    db_query("INSERT INTO {hosting_devshop_project_testing} " .
	     "(project_nid, tests_to_run) " .
	     "VALUES(%d, '%s')", $node->nid, $node->tests_to_run);
    break;

  case 'delete':
    db_query("DELETE FROM {hosting_devshop_project_testing} " .
	     "WHERE project_nid = %d", $node->nid);
    break;

  default:
    break;
  }

}

/**
 * Implementation of hook_hosting_tasks()
 *
 */
function devshop_testing_hosting_tasks() {
  $tasks = array();

  $tasks['site']['test'] = array(
    'title' => t('Run Tests'),
    'description' => t('Run tests on the site.'),
    'dialog' => TRUE,
    'task_permitted' => TRUE,
    'access callback' => 'devshop_hosting_task_menu_access',
  );

  return $tasks;
}

/**
 * Implements hook_devshop_environment_actions().
 *
 * Defines the list of tasks that appear under the gear icon.
 */
function devshop_testing_devshop_environment_actions($environment) {
  return array(
    'test'
  );
}
/**
 * Implementation of hook_hosting_task_TASK_TYPE_form().
 */
function hosting_task_test_form($node) {

  $tests = $node->tests_to_run;

  $form = array();
  devshop_projects_tasks_add_environment_to_form($form, $node, t('Choose the environment to run tests on.'), 'environment', 'Environment', 'radios');

  $example_site = key($form['environment']['#options']) . "." . $node->base_url;
  $form['tests_to_run'] = array(
    '#type' => 'textarea',
    '#title' => t('Tests To Run'),
    '#default_value' => $tests,
    '#rows' => 6,
    '#description' => t('Enter the names of the simpletests to run, one per line.  See the !link for examples, or call <strong><code>drush @@site test-run</code></strong> for a list of available tests.', array('!link' => l(t('Drupal API'), 'http://api.drupal.org/api/drupal/modules%21simpletest%21drupal_web_test_case.php/class/hierarchy/DrupalWebTestCase/7'), '@site' => $example_site)),
  );

  return $form;
}

/**
 * Implementation of hook_hosting_task_TASK_TYPE_form_validate().
 *
 */
function hosting_task_devshop_test_form_validate($form, &$form_state) {

  $tests = $form_state['values']['parameters']['tests_to_run'];
  $t = trim(str_replace("\n", "", $tests));

  if (empty($tests) || empty($t) || $tests == "" || $t == ""){
    form_set_error('tests_to_run', t('You must include at least one test.'));
  }


}


/**
 * Implements hook_form_alter().
 */
function devshop_testing_form_project_node_form_alter(&$form, &$form_state, $form_id) {
  $project = $form['#node']->project;

  $form['project']['settings']['testing'] = array(
    '#type' => 'fieldset',
    '#title' => t('Testing'),
    '#description' => t('Set the default testing settings for environments here.  Each environment can override these settings.'),
  );

  if (!isset($project->settings->testing)) {
    $project->settings->testing = array(
      'test_type' => 'simpletest',
      'tests_to_run' => '',
      'path_to_behat' => '',
    );
  }
  $form['project']['settings']['testing']['test_type'] = array(
    '#title' => t('Test Type'),
    '#options' => array(
      0 => t('None'),
      'simpletest' => t('SimpleTest'),
      'behat' => t('Behat'),
    ),
    '#type' => 'radios',
    '#default_value' => $project->settings->testing['test_type'],
  );

  $form['project']['settings']['testing']['tests_to_run'] = array(
    '#type' => 'textarea',
    '#title' => t('Tests to Run'),
    '#default_value' => $project->settings->testing['tests_to_run'],
    '#rows' => 6,
    '#description' => t('Enter the names of the tests to run, one per line.  See the !link for examples, or call <strong><code>drush @@site test-run</code></strong> for a list of available tests.', array('!link' => l(t('Drupal API'), 'http://api.drupal.org/api/drupal/modules%21simpletest%21drupal_web_test_case.php/class/hierarchy/DrupalWebTestCase/7'), '@site' => 'drushalias')),
  );

  $form['project']['settings']['testing']['path_to_behat'] = array(
    '#type' => 'textfield',
    '#title' => t('Path to Behat'),
    '#description' => t('Enter the path to bin/behat. If relative, enter the path relative to the Drupal root.'),
    '#default_value' => $project->settings->testing['path_to_behat'],
  );

}