##
# DevShop Remote Server
#
# Full Stack (for now)
# @TODO: Break each service out into separate playbooks.
#

---
- hosts: all
  user: root

  vars_files:
    - vars.yml
    - vars.{{ ansible_os_family }}.yml
    - vars.remote.yml

  tasks:

    - hostname: name={{ server_hostname }}

    - name: Setup | Message of the day.
      action: template src=templates/motd.j2 dest={{ motd_path }} mode=755


    # DEBIAN
    - name: Setup | Install required packages.
      action: apt pkg={{ item }} state=installed update_cache=yes
      when: ansible_os_family == "Debian"
      with_items:
        - apache2
        - mysql-server
        - php5
        - php5-cli
        - php5-curl
        - php5-gd
        - php5-mysql
        - php-pear
        - postfix
        - sudo
        - rsync
        - git-core
        - unzip
        - vim
        - git
        - curl
        - supervisor
        - python-mysqldb

    # REDHAT
    - name: Setup | Install required packages.
      action: yum name={{ item }} state=present
      when: ansible_os_family == "RedHat"
      with_items:
#      httpd php php-mysql php-cli php-gd php-process sudo rsync git postfix
        - httpd
        - php
        - php-mysql
        - php-cli
        - php-gd
        - php-process
        - php-pear
        - php-xml
        - postfix
        - sudo
        - rsync
        - git-core
        - unzip
        - vim
        - git
        - cronie
        - mariadb
        - mariadb-server
        - MySQL-python
        - epel-release
        - supervisor

    - name: Create Aegir Group (so we can set the GID)
      group:
        name=aegir
        state=present
        gid={{ aegir_user_uid }}

    - name: Create Aegir user
      user:
        name=aegir
        shell=/bin/bash
        group=aegir
        groups={{ apache_user }}
        append=yes
        system=yes
        home=/var/aegir
        generate_ssh_key=yes
        uid={{ aegir_user_uid }}

    - name: Ensure /var/aegir is owned by aegir user.
      file:
        state=directory
        path=/var/aegir
        group=aegir
        owner=aegir

    - name: Grant SSH access to aegir@server_master
      copy:
        content={{ server_master_ssh_key }}
        dest=/var/aegir/.ssh/authorized_keys
        owner=aegir group=aegir
        mode=0600

    # Aegir's CentOS installation requires this.
    - name: Set appropriate permissions for Aegir's home folder.
      command: chmod -R 755 /var/aegir
      when: ansible_os_family == "RedHat"


    # DEBIAN only.  RedHat has rewrite enabled by default.
    - name: Enable mod rewrite
      command: a2enmod rewrite
      when: ansible_os_family == "Debian"

    - name: Symbolic link to Aegir's Apache Config
      when: ansible_distribution != "Ubuntu" or ansible_lsb.major_release|int >= 14
      file:
        src=/var/aegir/config/apache.conf
        dest={{ apache_confd_path }}
        state=link
        force=yes
      notify:
        - restart apache

    # Apache Symlink for 14.04 and higher.
    - name: Symbolic link to Aegir's Apache Config (When ubuntu < 14.04)
      when: ansible_os_family == "Debian" and ansible_lsb.major_release|int < 14
      file:
        src=/var/aegir/config/apache.conf
        dest=/etc/apache2/conf.d/aegir.conf
        state=link
        force=yes
      notify:
        - restart apache

    - name: Write php.ini file. # @TODO: Restart apache if changed.
      template:
        src=templates/php.ini.j2
        dest={{ php_ini_path }}
        mode=0644

    - name: Write my.cnf file.
      template:
        src=templates/my.cnf.{{ ansible_os_family }}.j2
        dest={{ mysql_cnf_path }}
        mode=0644

    - name: Ensure MySQL is started and enabled on boot.
      service:
        name={{ mysql_daemon }}
        state=started
        enabled=yes

    - name: Check for secured installation of MySQL
      stat: path=/var/mysql-secured
      register: mysqlsecured

    - name: Install MySQL Securely
      include: ./tasks/mysql-secure.yml
      when: not mysqlsecured.stat.exists

    - name: Add aegir to sudoers for restarting apache.
      template:
        src=templates/sudoers-d-aegir.j2
        dest=/etc/sudoers.d/aegir
        mode=0440

  handlers:

    - name: restart mysql
      service: >
        name={{ mysql_daemon }}
        state=restarted

    - name: restart apache
      service:
        name={{ apache_daemon }}
        state=restarted