#!/usr/bin/env bash
DEVSHOP_PATH="$( cd "$(dirname "$0")"/.. ; pwd -P )"
PATH="$DEVSHOP_PATH/bin:$PATH"

set -e

log() {
  echo "DevShop | entrypoint | $@";
}

echo "   ____              ____  _                      "
echo "  |  _ \  _____   __/ ___|| |__   ___  _ __       "
echo "  | | | |/ _ \ \ / /\___ \| '_ \ / _ \| '_ \      "
echo "  | |_| |  __/\ V /  ___) | | | | (_) | |_) |     "
echo "  |____/ \___| \_/  |____/|_| |_|\___/| .__/      "
echo "           http://getdevshop.com      |_|         "
echo "__________________________________________________"
echo ""
echo "              Docker Entrypoint                   "
echo "__________________________________________________"

# Set ANSIBLE_TAGS from environment variable ANSIBLE_TAGS, or use ANSIBLE_TAGS_RUNTIME.
ANSIBLE_TAGS=${ANSIBLE_TAGS:-runtime}
DOCKER_COMMAND=${@:-devshop-ansible-playbook}
DOCKER_COMMAND_POST=${DOCKER_COMMAND_POST:-"echo 'Docker command $DOCKER_COMMAND complete!'"}
ENTRYPOINT_COMMAND=${ENTRYPOINT_COMMAND:-docker-systemd}

log "Docker Command: $DOCKER_COMMAND"
log "Secondary Docker Command: $DOCKER_SECONDARY_COMMAND"
log "Init Command: $ENTRYPOINT_COMMAND"

echo "Environment:"
env | grep "ANSIBLE_" || echo "No Ansible Variables found."

if [ -n "${DEVSHOP_ENTRYPOINT_LOG_FILES}" ]; then
  log "Tailing logs: $DEVSHOP_ENTRYPOINT_LOG_FILES"
  tail-file --follow --retry --verbose $DEVSHOP_ENTRYPOINT_LOG_FILES &
else
  log 'No files being output. Set $DEVSHOP_ENTRYPOINT_LOG_FILES variable with a list of files to tail.'
fi

log "Launching Docker Command in a new process: $DOCKER_COMMAND"
(sleep 3 && $DOCKER_COMMAND && $DOCKER_COMMAND_POST) &

# We keep this as devshop-systemd because systemd must run as PID 1.
log "Running Init Command: $ENTRYPOINT_COMMAND"
exec "$ENTRYPOINT_COMMAND"
