<?php
/*
 * devshop_log.module: a module in the DevShop project which displays
 * the Git commit log for each platform. This is currently a very simple
 * minded module. It assumes the operator knows what he/she is doing.
 */

/**
 * Implementation of hook_perm()
 */
function devshop_log_perm() {
  return array(
    'view git commit logs',
  );
}

/**
 * Implementation of hook_menu()
 */
function devshop_log_menu() {

  $items['node/%/gitlog'] = array(
    'title' => 'Git Commit Log',
    'description' => 'View Git commit log entries',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('devshop_log_view_form', 1),
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('view git commit logs'),
    'weight' => 4,
  );

  return ($items);
}


/**
 * View log form
 */
function devshop_log_view_form($form, $nid) {
  $form['devsop_log'] = array(
    '#type'   => 'item',
    '#title'  => '',
    '#value'  => t(''),
    '#weight' => 0,
  );
  $form['devsop_log']['commit_log'] = array(
    '#type'          => 'textarea',
    '#title'         => t('Git Commit Log'),
    '#default_value' => t(_devshop_log_load($nid)),
    '#attributes'    => array('readonly' => 'readonly'),
    '#rows'          => 25,
  );

  return $form;
}

/*
 * This is a hack which loads the git commit log for the given
 * platform node. 
 */

function _devshop_log_load($nid) {

  // load the platform node  
  if (!($node = node_load($nid))) {
    return "Unable to load platform node!";
  }

  // Run "git log" and capture the output. We need to chdir to the repo
  // directory before we fetch the log. Technically, I should be able to
  // use git's --work-tree option and not have to chdir, but for some
  // reason, it doesn't work. It works when I run the exact same command
  // at the shell prompt, but doesn't work when I call git from PHP. 
  // Something to fix one day.

  // Get our current working directory
  $cwd = getcwd();
  // Switch to the repo directory
  chdir($node->publish_path);
  // Fetch the log
  $output = shell_exec("git log 2>&1");
  // Change back to our original work directory
  chdir($cwd)
;
  // See if the command failed
  if ($output == NULL) {
    return "Unable to execute 'git log'. " .
    	   "Make sure the 'git' executable is in your path.";
  }

  // return the output
  return $output;
}
