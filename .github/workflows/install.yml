name: Install Script

on:
 push:
   branches: 1.x
 pull_request:
   types: [opened, synchronize]
 schedule:
   - cron: "0 6 * * *"

env:
  GITHUB_TOKEN: ${{ secrets.INPUT_GITHUB_TOKEN }}
  GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
  GITHUB_PR_SHA: ${{ github.event.pull_request.head.sha  }}
  GITHUB_RUN_LOG_URL: https://github.com/opendevshop/devshop/actions/runs/${{ github.run_id }}

jobs:
  install_script:
    name: "Install Script"
    description: "This test copies the install.sh file into an empty base container and runs it, without any supporting code."
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu1804'
          - 'centos7'
    env:
      DEVSHOP_SCRIPT_PATH: "/root/install.sh"
      DEVSHOP_SOURCE_PATH: "/usr/share/devshop"
      DOCKER_DIR: "docker"
      DOCKERFILE: "docker/base/Dockerfile.${{ matrix.os }}"
      DOCKER_TAG: "devshop/base:${{ matrix.os }}-ci"
      DOCKER_NAME: "devshop-base-${{ matrix.os }}-ci"
      HOSTNAME: "devshop.${{ github.event.pull_request.number }}.${{ matrix.os }}.actions.github.com"

    runs-on: ubuntu-latest
    steps:

    - name: Check Out Sourcecode
      uses: actions/checkout@v2

    - name: Build Base Container
      run: |
        docker build ${DOCKER_DIR} \
          --file ${DOCKERFILE} \
          --tag ${DOCKER_TAG}

    - name: Launch Base Container
      # Run the install.sh file from the PR by mounting it as a volume.
      # For CI purposes, we want /usr/share/devshop to match the code pushed by the developer (GITHUB_REF)
      # Traditionally, we would mount the /usr/share/devshop path from the CI code checkout.
      # The install.sh script checks if /usr/share/devshop exists before installing, and uses the code there.
      # @TODO: The install.sh script is not tested in a fully empty server. Add a test that does not mount the folder but instead installs it from git, just like install.sh would on a real server.
      run: |
        docker run \
          --name ${DOCKER_NAME} \
          --detach \
          --privileged \
          --volume /sys/fs/cgroup:/sys/fs/cgroup:ro \
          --volume ./install/install.sh:${DEVSHOP_SCRIPT_PATH} \
          --volume ./:${DEVSHOP_SOURCE_PATH} \
          --hostname ${HOSTNAME} \
          ${DOCKER_TAG}

    - name: Get DevShop Install Script
      run: |
        docker exec ${DOCKER_NAME} \
          curl -fsSL https://get.devshop.tech -o get-devshop.sh

    - name: Run DevShop Install Script
      run: |
        docker exec ${DOCKER_NAME} \
          bash get-devshop.sh

    - name: Save Assets
      if: always()
      run: |
        docker logs ${DOCKER_NAME} > ./.github/test-assets/docker-container.log

    - uses: actions/upload-artifact@v1
      if: always()
      with:
        name: test-assets
        path: ./.github/test-assets
