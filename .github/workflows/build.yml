name: Build

on: 
 push:
 schedule:
   - cron: "10 * * * *"

env:
  # Set ANSIBLE_VERBOSITY to 1,2 or 3 when needed for development.
  ANSIBLE_VERBOSITY: 0
  COMPOSE_FILE: "docker-compose.yml:docker-compose.tests.yml"

jobs:
  build:
    name: "${{ matrix.os }} / ${{ matrix.vars }}"
    strategy:
      fail-fast: false
      matrix:
        # Default build/run tags: Skip 'runtime' tag on build, Limit to 'runtime' tag on run.
        build_tags: ['all']
        build_skip_tags: ['runtime']
        run_tags: ['none']
        run_skip_tags: ['runtime']

        os:
          - 'ubuntu1804'
          # - 'centos6'
          - 'centos7'
        vars:
          - 'php_version: 7.2'
        include:
          # Override build/run tags for CentOS. Services can't start in docker build ATM.
          # Use 'none' tag on build to skip all steps. Set `all` tag on run to run entire playbook at runtime.
          - os: 'centos7'
            custom: true
            build_tags: 'none'
            build_skip_tags: ''
            run_tags: 'all'
            run_skip_tags: 'none'

    env:
      TAGS: "${{ matrix.build_tags }}"
      SKIP_TAGS: "${{ matrix.build_skip_tags }}"
      VARS: "${{ matrix.vars }}"
      OS: "${{ matrix.os }}"

    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v1
    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"

    - uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Build and Launch DevShop Server Image FROM ${{ matrix.os }} with PHP ${{ matrix.vars }}
      run: |
        bin/robo up "sleep infinity" \
          -vvv \
          --build \
          --follow 0 \
          --os "${OS}" \
          --vars "${VARS}" \
          --tags "${TAGS}" \
          --skip-tags "${SKIP_TAGS}"

      # robo exec doens't convert TAGS to ANSIBLE_TAGS yet.
    - name: Install DevShop
      env:
        ANSIBLE_TAGS: "${{ matrix.run_tags }}"
        ANSIBLE_SKIP_TAGS: "${{ matrix.run_skip_tags }}"
      run: |
        bin/robo exec devshop-ansible-playbook -vvv

    - name: Test DevShop
      run: |
        bin/robo test

    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: test-assets
        path: ./.github/test-assets
