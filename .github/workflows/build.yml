name: Build

on: 
 push:
 schedule:
   - cron: "10 * * * *"

env:
  ANSIBLE_VERBOSITY: 2

jobs:
  build:
    name: "${{ matrix.os }} / ${{ matrix.vars }}"
    strategy:
      matrix:
        os:
          - 'ubuntu1804'
          # - 'centos6'
          - 'centos7'
        vars:
          - 'php_version: 7.2'
    env:
      TAGS: "all"
      SKIP_TAGS: "runtime"
      VARS: "${{ matrix.vars }}"
      OS: "${{ matrix.os }}"

    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v1
    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"

    - uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Build and Launch DevShop Server Image FROM ${{ matrix.os }} with PHP ${{ matrix.vars }}
      run: |
        bin/robo up "sleep infinity" \
          -vvv \
          --build \
          --follow 0 \
          --os "${OS}" \
          --vars "${VARS}" \
          --tags "${TAGS}" \
          --skip-tags "${SKIP_TAGS}" \
          --compose-file docker-compose-tests.yml

    - name: Install DevShop
      env:
        ANSIBLE_TAGS: "runtime"
        ANSIBLE_SKIP_TAGS: "none"
        COMPOSE_FILE: "docker-compose-tests.yml"
      # @TODO: Seems like env above is not making it's way to the container and devshop-ansible-playbook command: https://github.com/opendevshop/devshop/pull/487/checks?check_run_id=400001612#step:7:10
      # Once the problem is discovered, remove either 'env' or the --env options below.
      run: |
        bin/robo exec devshop-ansible-playbook \
          -vvv \
          --compose-file docker-compose-tests.yml

    - name: Test DevShop
      run: |
        bin/robo test --compose-file docker-compose-tests.yml

    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: test-assets
        path: ./.github/test-assets
