name: Test

on: 
 push:

env:
  ANSIBLE_VERBOSITY: 2
  COMPOSE_FILE: "docker-compose.tests.yml"

jobs:
  test:
    name: Test DevShop

    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v1
    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"

    - uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Build and Launch pre-built DevShop Server Image FROM devshop/server
      run: |
        bin/robo up "sleep infinity" \
          --build \
          --follow 0 \
          --vars "devshop_danger_remove_devmaster=true" \
          --tags "rebuild-devmaster" \
          --from "devshop/server:latest" \
          --skip-tags "none"

    - name: Install DevShop
      env:
        COMPOSE_FILE: "docker-compose.tests.yml"
      # @TODO: Seems like env above is not making it's way to the container and devshop-ansible-playbook command: https://github.com/opendevshop/devshop/pull/487/checks?check_run_id=400001612#step:7:10
      # Once the problem is discovered, remove either 'env' or the --env options below.
      run: |
        docker-compose exec -T devshop service mysql start && \
        bin/robo exec devshop-ansible-playbook

    - name: Test DevShop
      run: |
        bin/robo test

    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: test-assets
        path: ./.github/test-assets
