name: DevShop Build & Test

on:
  push:
    branches: 1.x
  pull_request:
    types: [opened, synchronize]
  schedule:
    - cron: "0 6 * * *"

env:
  GITHUB_TOKEN: ${{ secrets.INPUT_GITHUB_TOKEN }}
  GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
  GITHUB_PR_SHA: ${{ github.event.pull_request.head.sha  }}
  GITHUB_RUN_LOG_URL: https://github.com/opendevshop/devshop/actions/runs/${{ github.run_id }}

jobs:
  docker:
    name: "Docker Containers"
    # description: Build every docker container, then install DevShop to confirm they work.
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu1804'
          - 'centos7'
    env:
      OS: "${{ matrix.os }}"
      HOSTNAME: "devshop.${{ github.event.pull_request.number }}.${{ matrix.os }}.actions.github.com"

    runs-on: ubuntu-latest
    steps:

      - name: Check Out Sourcecode
        uses: actions/checkout@v2

      # Build "base"
      - name: "Build Docker Image: devshop/base:${{ matrix.os }}"
        working-directory: docker
        run: docker-compose build base

      # Build "ansible"
      - name: "Build Docker Image: devshop/ansible:${{ matrix.os }}"
        working-directory: docker
        run: docker-compose build ansible

      # Build "core"
      - name: "Build Docker Image: devshop/core:${{ matrix.os }}"
        working-directory: docker
        run: docker-compose build core

      # Build "role"
      - name: "Build Docker Image: devshop/role:${{ matrix.os }}"
        working-directory: docker
        run: docker-compose build role

      # Build DevShop Role Images
      - name: "Build Docker Image: devshop/server:(${{ matrix.os }})"
        working-directory: roles
        run: docker-compose build devshop.server

      # Launch Container
      - name: "Launch DevShop Server: devshop/server:${{ matrix.os }}"
        working-directory: roles
        # @TODO: MySQL isn't starting when the container goes up.
        env:
          COMMAND: service mysql start
        run: docker-compose up --detach devshop.server

      - name: "Container Environment: ${{ matrix.os }}"
        working-directory: roles
        run: docker-compose exec -T devshop.server env

      - name: "Install DevShop: ${{ matrix.os }}"
        working-directory: roles
        run: docker-compose exec -T devshop.server $DEVSHOP_DOCKER_COMMAND_RUN

      - name: "Test DevShop: ${{ matrix.os }}"
        working-directory: roles
        run: docker-compose exec -T devshop.server devshop devmaster:test

      - name: Save Assets
        if: always()
        working-directory: roles
        run: |
          docker-compose exec -T devshop.server systemctl status --no-pager | tee ./.github/test-assets/systemctl-status.log
          docker-composer logs devshop.server | tee ./.github/test-assets/docker-container.log


  devmaster:
    name: Devmaster 
    # description: Install devmaster and run tests on a pre-built image.
    # @TODO: Set up this job once the devshop/server container is done.
    if: false
    runs-on: ubuntu-latest
    container:
      image: devshop/ansible:centos7
      volumes:
        - ./:/usr/share/devshop
      options: >-
        --hostname={{ env.HOSTNAME }}

    steps:

      - name: Check Out Sourcecode
        uses: actions/checkout@v2

      - name: Install devmaster
        run: devhop devmaster:install

      - name: Test devmaster
        run: devhop devmaster:test                
