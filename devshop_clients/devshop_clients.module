<?php
/**
 * @file
 *   Allow clients to be created and granted permissions over projects.
 */

/**
 * Implementation of hook_form_alter().
 */
function devshop_clients_form_alter(&$form, $form_state, $form_id) {
  if (user_access('administer clients')) {
    if (hosting_feature('client') && $form_id == 'project_node_form') {
      global $user;
      $node = $form["#node"];
      // Show a list of clients to give access to this platform
      $clients = _hosting_get_clients();
      $form['clients'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Project access control'),
        '#options' => $clients,
        '#default_value' => isset($node->clients) ? $node->clients : array(),
        '#description' => t('Grant access to this project for relevant clients where required. Leave all checkboxes unchecked to grant all clients access to this project.'),
        '#weight' => 99,
      );
    }
  }
}

/**
 * Implementation of hook_nodeapi().
 */
function devshop_clients_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($node->type == 'project') {
    switch ($op) {
      case 'load':
        return devshop_clients_nodeapi_load_project($node);
      case 'insert':
      case 'update':
        // Enter access rights in to the db for clients if any were selected
        if (!empty($node->clients)) {
          $clients = $node->clients;
          foreach ($clients as $cid => $choice) {
            if ($choice) {
              // Client has been selected, add them to the access table
              $existing = db_result(db_query("SELECT cid FROM {hosting_project_client_access} WHERE pid = %d AND cid = %d", $node->nid, $cid));
              if (!$existing) {
                db_query("INSERT INTO {hosting_project_client_access} (pid, cid) VALUES (%d, %d)", $node->nid, $cid);
              }
            }
            else {
              // Client has not been selected, or unselected
              $existing = db_result(db_query("SELECT cid FROM {hosting_project_client_access} WHERE pid = %d AND cid = %d", $node->nid, $cid));
              if ($existing) {
                db_query("DELETE FROM {hosting_project_client_access} WHERE pid = %d AND cid = %d", $node->nid, $cid);
              }
            }
          }

          //Now process and add the settings to platforms.
          _devshop_clients_add_client_platform($node);
        }
        break;
      case 'delete':
        if ($node->type == 'platform') {
          db_query("DELETE FROM {hosting_project_client_access} WHERE pid = %d", $node->nid);
        }
        break;
    }
  }
}

/**
 * OP load in nodeapi.
 */
function devshop_clients_nodeapi_load_project($node) {
  $result = db_query("SELECT cid FROM {hosting_project_client_access} WHERE pid = %d", $node->nid);

  $additions = array();

  while ($record = db_fetch_object($result)) {
    $additions['clients'][$record->cid] = $record->cid;
  }

  return $additions;
}

/**
 * Copy client settings to platforms.
 */
function _devshop_clients_add_client_platform($node) {
  if ($node->project_objects['platform']) {
    foreach ($node->project_objects['platform'] as $nid => $type) {
      $platform = node_load($nid);
      $platform->clients = $node->clients;
      node_save($platform);
    } 
  }
}
